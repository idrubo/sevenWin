sevenWin:
----------

To setup the project you must remember to run:
php composer update

plus

php artisan passport:install

and

php artisan key:generate

Don't forguet to change your SQL database credentials at ".env".

The project must be run with PHP-8.0 and laravel 9.x.

Notice that passport's "app/Models/User.php" class has been renamed to
 "app/Models/Player.php".

Endpoints:

- You can find all the endpoints listed on the exercise plus a "login" and
"logout" endpoints.

- All endpoints are defined on "routes/api.php", like:

Non protected:

POST /players/     -> To create a player.
POST /login/       -> To login.

Protected:

POST /logout/      -> To logout.
PUT  /players/{id} -> To modify a player's name.

POST   /players/{id}/games/ -> A player throw dices.
DELETE /players/{id}/games/ -> To delete a player's throws.
GET    /players/{id}/games/ -> To list a player's throws.

GET /players/               -> To list all players average.
GET /players/ranking        -> To calculate a total average.
GET /players/ranking/loser  -> To get the user with the lowest average.
GET /players/ranking/winner -> To get the user with the best average.

Roles:

- There are two roles: "player" and "admin".

- The user's role must be sent through the parameter 'role' when running a
"POST /player" endpoint like:

"curl -X POST -F 'name=name1' -F 'email=name1@s.com' -F 'password=12345678' -F 'role=player' http://localhost:8000/api/players"

- As you can see there's a "role=player" parameter.

- Any user can run the following endpoints:
POST /players/
POST /login/
POST /logout/

- Players can run the following endpoints:
POST   /players/{id}/games/
DELETE /players/{id}/games/
GET    /players/{id}/games/

- Finally an admin can view throw stats by running:
GET /players/
GET /players/ranking/
GET /players/ranking/loser/
GET /players/ranking/winner/

Postman collections:

Postman collections are placed at "API" directory, placed at the project's root.
As you can see, API REST calls strictly follow the ones defined above.

Finally to run the included feature tests you must:

1.- Connect to your database server and run:

DROP DATABASE IF EXISTS sevenWin;
CREATE DATABASE sevenWin CHARACTER SET utf8mb4;
USE sevenWin;

Under the "API/" directory on the project's root you will find a "sevenWin.sql"
 script to do so.

2.- Run the following artisan commands:

php artisan migrate
php artisan passport:install

Under the "API/" directory on the project's root you will find a "setupSW.sh"
 script to do so.

3.- Finally you can run:

php artisan test

Since the test players must be created for every test, this procedure must
 be repeated every time you run the tests.

